// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/consensus/walmsgs.proto

package consensus

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/duration"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgInfo struct {
	Msg    Message `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	PeerId string  `protobuf:"bytes,2,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
}

func (m *MsgInfo) Reset()      { *m = MsgInfo{} }
func (*MsgInfo) ProtoMessage() {}
func (*MsgInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ad80fa14e37285, []int{0}
}
func (m *MsgInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInfo.Merge(m, src)
}
func (m *MsgInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInfo proto.InternalMessageInfo

func (m *MsgInfo) GetMsg() Message {
	if m != nil {
		return m.Msg
	}
	return Message{}
}

func (m *MsgInfo) GetPeerId() string {
	if m != nil {
		return m.PeerId
	}
	return ""
}

type TimeoutInfo struct {
	Duration time.Duration `protobuf:"bytes,1,opt,name=duration,proto3,stdduration" json:"duration"`
	Height   int64         `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Round    int32         `protobuf:"varint,3,opt,name=round,proto3" json:"round,omitempty"`
	Step     int8          `protobuf:"varint,4,opt,name=step,proto3,casttype=int8" json:"step,omitempty"`
}

func (m *TimeoutInfo) Reset()      { *m = TimeoutInfo{} }
func (*TimeoutInfo) ProtoMessage() {}
func (*TimeoutInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ad80fa14e37285, []int{1}
}
func (m *TimeoutInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TimeoutInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TimeoutInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TimeoutInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutInfo.Merge(m, src)
}
func (m *TimeoutInfo) XXX_Size() int {
	return m.Size()
}
func (m *TimeoutInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutInfo proto.InternalMessageInfo

func (m *TimeoutInfo) GetDuration() time.Duration {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *TimeoutInfo) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *TimeoutInfo) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *TimeoutInfo) GetStep() int8 {
	if m != nil {
		return m.Step
	}
	return 0
}

type EndHeightMessage struct {
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (m *EndHeightMessage) Reset()      { *m = EndHeightMessage{} }
func (*EndHeightMessage) ProtoMessage() {}
func (*EndHeightMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_60ad80fa14e37285, []int{2}
}
func (m *EndHeightMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EndHeightMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EndHeightMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EndHeightMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EndHeightMessage.Merge(m, src)
}
func (m *EndHeightMessage) XXX_Size() int {
	return m.Size()
}
func (m *EndHeightMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EndHeightMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EndHeightMessage proto.InternalMessageInfo

func (m *EndHeightMessage) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgInfo)(nil), "tendermint.proto.consensus.msgInfo")
	proto.RegisterType((*TimeoutInfo)(nil), "tendermint.proto.consensus.timeoutInfo")
	proto.RegisterType((*EndHeightMessage)(nil), "tendermint.proto.consensus.EndHeightMessage")
}

func init() { proto.RegisterFile("proto/consensus/walmsgs.proto", fileDescriptor_60ad80fa14e37285) }

var fileDescriptor_60ad80fa14e37285 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x3d, 0x4f, 0xe3, 0x30,
	0x18, 0x8e, 0xaf, 0xe9, 0xc7, 0xb9, 0xcb, 0x29, 0x3a, 0xdd, 0xe5, 0xa2, 0xc3, 0xad, 0x8a, 0x84,
	0x2a, 0x06, 0x07, 0xc1, 0x82, 0xc4, 0x80, 0x14, 0x81, 0x44, 0x07, 0x96, 0x8c, 0x2c, 0x55, 0xda,
	0xb8, 0x8e, 0xa5, 0xc6, 0x8e, 0x62, 0x47, 0x88, 0x8d, 0x9f, 0xc0, 0x88, 0xf8, 0x05, 0xfc, 0x94,
	0x8e, 0x1d, 0x3b, 0x15, 0x9a, 0x2e, 0x8c, 0x9d, 0x99, 0x50, 0x3e, 0xfa, 0xa1, 0x4a, 0x6c, 0xef,
	0xf3, 0xf8, 0x7d, 0x3e, 0x6c, 0xc3, 0x83, 0x28, 0x16, 0x4a, 0xd8, 0x43, 0xc1, 0x25, 0xe1, 0x32,
	0x91, 0xf6, 0xbd, 0x37, 0x0e, 0x25, 0x95, 0x38, 0xe7, 0x0d, 0x4b, 0x11, 0xee, 0x93, 0x38, 0x64,
	0x5c, 0x15, 0x0c, 0xde, 0x6c, 0x5a, 0x47, 0x2a, 0x60, 0xb1, 0xdf, 0x8f, 0xbc, 0x58, 0x3d, 0xd8,
	0x85, 0x0d, 0x15, 0x54, 0x6c, 0xa7, 0x42, 0x61, 0x59, 0xfb, 0x11, 0x5b, 0x7f, 0x0b, 0x51, 0x21,
	0xe8, 0x98, 0x14, 0xf2, 0x41, 0x32, 0xb2, 0xfd, 0x24, 0xf6, 0x14, 0x13, 0xbc, 0x38, 0xef, 0xf4,
	0x61, 0x3d, 0x94, 0xb4, 0xc7, 0x47, 0xc2, 0xb8, 0x80, 0x95, 0x50, 0x52, 0x13, 0xb4, 0x41, 0xb7,
	0x79, 0x7a, 0x88, 0xbf, 0x2f, 0x86, 0x6f, 0x89, 0x94, 0x1e, 0x25, 0x8e, 0x3e, 0x99, 0xb7, 0x34,
	0x37, 0x53, 0x19, 0x7f, 0x61, 0x3d, 0x22, 0x24, 0xee, 0x33, 0xdf, 0xfc, 0xd1, 0x06, 0xdd, 0x9f,
	0x6e, 0x2d, 0x83, 0x3d, 0xbf, 0xf3, 0x02, 0x60, 0x53, 0xb1, 0x90, 0x88, 0x44, 0xe5, 0x29, 0x97,
	0xb0, 0xb1, 0xae, 0x50, 0x46, 0xfd, 0xc3, 0x45, 0x47, 0xbc, 0xee, 0x88, 0xaf, 0xca, 0x05, 0xa7,
	0x91, 0x05, 0x3c, 0xbf, 0xb5, 0x80, 0xbb, 0x11, 0x19, 0x7f, 0x60, 0x2d, 0x20, 0x8c, 0x06, 0x2a,
	0x0f, 0xaa, 0xb8, 0x25, 0x32, 0x7e, 0xc3, 0x6a, 0x2c, 0x12, 0xee, 0x9b, 0x95, 0x36, 0xe8, 0x56,
	0xdd, 0x02, 0x18, 0xff, 0xa1, 0x2e, 0x15, 0x89, 0x4c, 0x3d, 0x23, 0x9d, 0xc6, 0xe7, 0xbc, 0xa5,
	0x33, 0xae, 0xce, 0xdd, 0x9c, 0xed, 0x1c, 0xc3, 0x5f, 0xd7, 0xdc, 0xbf, 0xc9, 0x0d, 0xca, 0x4b,
	0xed, 0xf8, 0x83, 0x5d, 0x7f, 0x67, 0x34, 0x5d, 0x20, 0x6d, 0xb6, 0x40, 0xda, 0x6a, 0x81, 0xc0,
	0x63, 0x8a, 0xc0, 0x6b, 0x8a, 0xc0, 0x24, 0x45, 0x60, 0x9a, 0x22, 0xf0, 0x9e, 0x22, 0xf0, 0x91,
	0x22, 0x6d, 0x95, 0x22, 0xf0, 0xb4, 0x44, 0xda, 0x74, 0x89, 0xb4, 0xd9, 0x12, 0x69, 0x77, 0x27,
	0x94, 0xa9, 0x20, 0x19, 0xe0, 0xa1, 0x08, 0xed, 0xed, 0x8b, 0xee, 0x8e, 0x7b, 0x9f, 0x37, 0xa8,
	0xe5, 0xc4, 0xd9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x73, 0x09, 0x8c, 0x39, 0x02, 0x00,
	0x00,
}

func (this *MsgInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgInfo)
	if !ok {
		that2, ok := that.(MsgInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Msg.Equal(&that1.Msg) {
		return false
	}
	if this.PeerId != that1.PeerId {
		return false
	}
	return true
}
func (this *TimeoutInfo) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*TimeoutInfo)
	if !ok {
		that2, ok := that.(TimeoutInfo)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Duration != that1.Duration {
		return false
	}
	if this.Height != that1.Height {
		return false
	}
	if this.Round != that1.Round {
		return false
	}
	if this.Step != that1.Step {
		return false
	}
	return true
}
func (this *EndHeightMessage) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EndHeightMessage)
	if !ok {
		that2, ok := that.(EndHeightMessage)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Height != that1.Height {
		return false
	}
	return true
}
func (this *MsgInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&consensus.MsgInfo{")
	s = append(s, "Msg: "+strings.Replace(this.Msg.GoString(), `&`, ``, 1)+",\n")
	s = append(s, "PeerId: "+fmt.Sprintf("%#v", this.PeerId)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *TimeoutInfo) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 8)
	s = append(s, "&consensus.TimeoutInfo{")
	s = append(s, "Duration: "+fmt.Sprintf("%#v", this.Duration)+",\n")
	s = append(s, "Height: "+fmt.Sprintf("%#v", this.Height)+",\n")
	s = append(s, "Round: "+fmt.Sprintf("%#v", this.Round)+",\n")
	s = append(s, "Step: "+fmt.Sprintf("%#v", this.Step)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *EndHeightMessage) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&consensus.EndHeightMessage{")
	s = append(s, "Height: "+fmt.Sprintf("%#v", this.Height)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringWalmsgs(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *MsgInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PeerId) > 0 {
		i -= len(m.PeerId)
		copy(dAtA[i:], m.PeerId)
		i = encodeVarintWalmsgs(dAtA, i, uint64(len(m.PeerId)))
		i--
		dAtA[i] = 0x12
	}
	{
		size, err := m.Msg.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintWalmsgs(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *TimeoutInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TimeoutInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TimeoutInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Step != 0 {
		i = encodeVarintWalmsgs(dAtA, i, uint64(m.Step))
		i--
		dAtA[i] = 0x20
	}
	if m.Round != 0 {
		i = encodeVarintWalmsgs(dAtA, i, uint64(m.Round))
		i--
		dAtA[i] = 0x18
	}
	if m.Height != 0 {
		i = encodeVarintWalmsgs(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	n2, err2 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.Duration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.Duration):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintWalmsgs(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *EndHeightMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EndHeightMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EndHeightMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Height != 0 {
		i = encodeVarintWalmsgs(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintWalmsgs(dAtA []byte, offset int, v uint64) int {
	offset -= sovWalmsgs(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Msg.Size()
	n += 1 + l + sovWalmsgs(uint64(l))
	l = len(m.PeerId)
	if l > 0 {
		n += 1 + l + sovWalmsgs(uint64(l))
	}
	return n
}

func (m *TimeoutInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.Duration)
	n += 1 + l + sovWalmsgs(uint64(l))
	if m.Height != 0 {
		n += 1 + sovWalmsgs(uint64(m.Height))
	}
	if m.Round != 0 {
		n += 1 + sovWalmsgs(uint64(m.Round))
	}
	if m.Step != 0 {
		n += 1 + sovWalmsgs(uint64(m.Step))
	}
	return n
}

func (m *EndHeightMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovWalmsgs(uint64(m.Height))
	}
	return n
}

func sovWalmsgs(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWalmsgs(x uint64) (n int) {
	return sovWalmsgs(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *MsgInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MsgInfo{`,
		`Msg:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Msg), "Message", "Message", 1), `&`, ``, 1) + `,`,
		`PeerId:` + fmt.Sprintf("%v", this.PeerId) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TimeoutInfo) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TimeoutInfo{`,
		`Duration:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Duration), "Duration", "duration.Duration", 1), `&`, ``, 1) + `,`,
		`Height:` + fmt.Sprintf("%v", this.Height) + `,`,
		`Round:` + fmt.Sprintf("%v", this.Round) + `,`,
		`Step:` + fmt.Sprintf("%v", this.Step) + `,`,
		`}`,
	}, "")
	return s
}
func (this *EndHeightMessage) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EndHeightMessage{`,
		`Height:` + fmt.Sprintf("%v", this.Height) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringWalmsgs(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *MsgInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWalmsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: msgInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: msgInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWalmsgs
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Msg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PeerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWalmsgs
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PeerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWalmsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TimeoutInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWalmsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: timeoutInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: timeoutInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWalmsgs
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.Duration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Round", wireType)
			}
			m.Round = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Round |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Step", wireType)
			}
			m.Step = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Step |= int8(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWalmsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EndHeightMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWalmsgs
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EndHeightMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EndHeightMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWalmsgs(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthWalmsgs
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWalmsgs(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWalmsgs
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWalmsgs
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWalmsgs
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWalmsgs
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWalmsgs
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWalmsgs        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWalmsgs          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWalmsgs = fmt.Errorf("proto: unexpected end of group")
)
